/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const CreateGradingPeriodForTermStatus = {
  Active: "active",
  Tobedeleted: "tobedeleted",
} as const;
export type CreateGradingPeriodForTermStatus = ClosedEnum<
  typeof CreateGradingPeriodForTermStatus
>;

export type CreateGradingPeriodForTermParent = {
  sourcedId: string;
};

export type CreateGradingPeriodForTermOrg = {
  sourcedId: string;
};

export type CreateGradingPeriodForTermAcademicSession = {
  sourcedId?: string | undefined;
  status?: CreateGradingPeriodForTermStatus | undefined;
  metadata?: { [k: string]: any } | undefined;
  title: string;
  startDate: string;
  endDate: string;
  type?: "gradingPeriod" | undefined;
  parent?: CreateGradingPeriodForTermParent | null | undefined;
  schoolYear: string;
  org: CreateGradingPeriodForTermOrg;
};

export type CreateGradingPeriodForTermRequestBody = {
  academicSession: CreateGradingPeriodForTermAcademicSession;
};

export type CreateGradingPeriodForTermRequest = {
  /**
   * The sourcedId of the term
   */
  termSourcedId: string;
  requestBody: CreateGradingPeriodForTermRequestBody;
};

/**
 * Grading period successfully created
 */
export type CreateGradingPeriodForTermResponse = {
  /**
   * Represents an academic session.
   */
  academicSession: components.AcademicSession;
};

/** @internal */
export const CreateGradingPeriodForTermStatus$inboundSchema: z.ZodNativeEnum<
  typeof CreateGradingPeriodForTermStatus
> = z.nativeEnum(CreateGradingPeriodForTermStatus);

/** @internal */
export const CreateGradingPeriodForTermStatus$outboundSchema: z.ZodNativeEnum<
  typeof CreateGradingPeriodForTermStatus
> = CreateGradingPeriodForTermStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodForTermStatus$ {
  /** @deprecated use `CreateGradingPeriodForTermStatus$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodForTermStatus$inboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermStatus$outboundSchema` instead. */
  export const outboundSchema = CreateGradingPeriodForTermStatus$outboundSchema;
}

/** @internal */
export const CreateGradingPeriodForTermParent$inboundSchema: z.ZodType<
  CreateGradingPeriodForTermParent,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type CreateGradingPeriodForTermParent$Outbound = {
  sourcedId: string;
};

/** @internal */
export const CreateGradingPeriodForTermParent$outboundSchema: z.ZodType<
  CreateGradingPeriodForTermParent$Outbound,
  z.ZodTypeDef,
  CreateGradingPeriodForTermParent
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodForTermParent$ {
  /** @deprecated use `CreateGradingPeriodForTermParent$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodForTermParent$inboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermParent$outboundSchema` instead. */
  export const outboundSchema = CreateGradingPeriodForTermParent$outboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermParent$Outbound` instead. */
  export type Outbound = CreateGradingPeriodForTermParent$Outbound;
}

export function createGradingPeriodForTermParentToJSON(
  createGradingPeriodForTermParent: CreateGradingPeriodForTermParent,
): string {
  return JSON.stringify(
    CreateGradingPeriodForTermParent$outboundSchema.parse(
      createGradingPeriodForTermParent,
    ),
  );
}

export function createGradingPeriodForTermParentFromJSON(
  jsonString: string,
): SafeParseResult<CreateGradingPeriodForTermParent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateGradingPeriodForTermParent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGradingPeriodForTermParent' from JSON`,
  );
}

/** @internal */
export const CreateGradingPeriodForTermOrg$inboundSchema: z.ZodType<
  CreateGradingPeriodForTermOrg,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type CreateGradingPeriodForTermOrg$Outbound = {
  sourcedId: string;
};

/** @internal */
export const CreateGradingPeriodForTermOrg$outboundSchema: z.ZodType<
  CreateGradingPeriodForTermOrg$Outbound,
  z.ZodTypeDef,
  CreateGradingPeriodForTermOrg
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodForTermOrg$ {
  /** @deprecated use `CreateGradingPeriodForTermOrg$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodForTermOrg$inboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermOrg$outboundSchema` instead. */
  export const outboundSchema = CreateGradingPeriodForTermOrg$outboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermOrg$Outbound` instead. */
  export type Outbound = CreateGradingPeriodForTermOrg$Outbound;
}

export function createGradingPeriodForTermOrgToJSON(
  createGradingPeriodForTermOrg: CreateGradingPeriodForTermOrg,
): string {
  return JSON.stringify(
    CreateGradingPeriodForTermOrg$outboundSchema.parse(
      createGradingPeriodForTermOrg,
    ),
  );
}

export function createGradingPeriodForTermOrgFromJSON(
  jsonString: string,
): SafeParseResult<CreateGradingPeriodForTermOrg, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateGradingPeriodForTermOrg$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGradingPeriodForTermOrg' from JSON`,
  );
}

/** @internal */
export const CreateGradingPeriodForTermAcademicSession$inboundSchema: z.ZodType<
  CreateGradingPeriodForTermAcademicSession,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string().optional(),
  status: CreateGradingPeriodForTermStatus$inboundSchema.default("active"),
  metadata: z.record(z.any()).optional(),
  title: z.string(),
  startDate: z.string(),
  endDate: z.string(),
  type: z.literal("gradingPeriod").default("gradingPeriod").optional(),
  parent: z.nullable(
    z.lazy(() => CreateGradingPeriodForTermParent$inboundSchema),
  ).optional(),
  schoolYear: z.string(),
  org: z.lazy(() => CreateGradingPeriodForTermOrg$inboundSchema),
});

/** @internal */
export type CreateGradingPeriodForTermAcademicSession$Outbound = {
  sourcedId?: string | undefined;
  status: string;
  metadata?: { [k: string]: any } | undefined;
  title: string;
  startDate: string;
  endDate: string;
  type: "gradingPeriod";
  parent?: CreateGradingPeriodForTermParent$Outbound | null | undefined;
  schoolYear: string;
  org: CreateGradingPeriodForTermOrg$Outbound;
};

/** @internal */
export const CreateGradingPeriodForTermAcademicSession$outboundSchema:
  z.ZodType<
    CreateGradingPeriodForTermAcademicSession$Outbound,
    z.ZodTypeDef,
    CreateGradingPeriodForTermAcademicSession
  > = z.object({
    sourcedId: z.string().optional(),
    status: CreateGradingPeriodForTermStatus$outboundSchema.default("active"),
    metadata: z.record(z.any()).optional(),
    title: z.string(),
    startDate: z.string(),
    endDate: z.string(),
    type: z.literal("gradingPeriod").default("gradingPeriod" as const),
    parent: z.nullable(
      z.lazy(() => CreateGradingPeriodForTermParent$outboundSchema),
    ).optional(),
    schoolYear: z.string(),
    org: z.lazy(() => CreateGradingPeriodForTermOrg$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodForTermAcademicSession$ {
  /** @deprecated use `CreateGradingPeriodForTermAcademicSession$inboundSchema` instead. */
  export const inboundSchema =
    CreateGradingPeriodForTermAcademicSession$inboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermAcademicSession$outboundSchema` instead. */
  export const outboundSchema =
    CreateGradingPeriodForTermAcademicSession$outboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermAcademicSession$Outbound` instead. */
  export type Outbound = CreateGradingPeriodForTermAcademicSession$Outbound;
}

export function createGradingPeriodForTermAcademicSessionToJSON(
  createGradingPeriodForTermAcademicSession:
    CreateGradingPeriodForTermAcademicSession,
): string {
  return JSON.stringify(
    CreateGradingPeriodForTermAcademicSession$outboundSchema.parse(
      createGradingPeriodForTermAcademicSession,
    ),
  );
}

export function createGradingPeriodForTermAcademicSessionFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateGradingPeriodForTermAcademicSession,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateGradingPeriodForTermAcademicSession$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateGradingPeriodForTermAcademicSession' from JSON`,
  );
}

/** @internal */
export const CreateGradingPeriodForTermRequestBody$inboundSchema: z.ZodType<
  CreateGradingPeriodForTermRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  academicSession: z.lazy(() =>
    CreateGradingPeriodForTermAcademicSession$inboundSchema
  ),
});

/** @internal */
export type CreateGradingPeriodForTermRequestBody$Outbound = {
  academicSession: CreateGradingPeriodForTermAcademicSession$Outbound;
};

/** @internal */
export const CreateGradingPeriodForTermRequestBody$outboundSchema: z.ZodType<
  CreateGradingPeriodForTermRequestBody$Outbound,
  z.ZodTypeDef,
  CreateGradingPeriodForTermRequestBody
> = z.object({
  academicSession: z.lazy(() =>
    CreateGradingPeriodForTermAcademicSession$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodForTermRequestBody$ {
  /** @deprecated use `CreateGradingPeriodForTermRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    CreateGradingPeriodForTermRequestBody$inboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    CreateGradingPeriodForTermRequestBody$outboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermRequestBody$Outbound` instead. */
  export type Outbound = CreateGradingPeriodForTermRequestBody$Outbound;
}

export function createGradingPeriodForTermRequestBodyToJSON(
  createGradingPeriodForTermRequestBody: CreateGradingPeriodForTermRequestBody,
): string {
  return JSON.stringify(
    CreateGradingPeriodForTermRequestBody$outboundSchema.parse(
      createGradingPeriodForTermRequestBody,
    ),
  );
}

export function createGradingPeriodForTermRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateGradingPeriodForTermRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateGradingPeriodForTermRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGradingPeriodForTermRequestBody' from JSON`,
  );
}

/** @internal */
export const CreateGradingPeriodForTermRequest$inboundSchema: z.ZodType<
  CreateGradingPeriodForTermRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  termSourcedId: z.string(),
  RequestBody: z.lazy(() =>
    CreateGradingPeriodForTermRequestBody$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type CreateGradingPeriodForTermRequest$Outbound = {
  termSourcedId: string;
  RequestBody: CreateGradingPeriodForTermRequestBody$Outbound;
};

/** @internal */
export const CreateGradingPeriodForTermRequest$outboundSchema: z.ZodType<
  CreateGradingPeriodForTermRequest$Outbound,
  z.ZodTypeDef,
  CreateGradingPeriodForTermRequest
> = z.object({
  termSourcedId: z.string(),
  requestBody: z.lazy(() =>
    CreateGradingPeriodForTermRequestBody$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodForTermRequest$ {
  /** @deprecated use `CreateGradingPeriodForTermRequest$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodForTermRequest$inboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateGradingPeriodForTermRequest$outboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermRequest$Outbound` instead. */
  export type Outbound = CreateGradingPeriodForTermRequest$Outbound;
}

export function createGradingPeriodForTermRequestToJSON(
  createGradingPeriodForTermRequest: CreateGradingPeriodForTermRequest,
): string {
  return JSON.stringify(
    CreateGradingPeriodForTermRequest$outboundSchema.parse(
      createGradingPeriodForTermRequest,
    ),
  );
}

export function createGradingPeriodForTermRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateGradingPeriodForTermRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateGradingPeriodForTermRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGradingPeriodForTermRequest' from JSON`,
  );
}

/** @internal */
export const CreateGradingPeriodForTermResponse$inboundSchema: z.ZodType<
  CreateGradingPeriodForTermResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  academicSession: components.AcademicSession$inboundSchema,
});

/** @internal */
export type CreateGradingPeriodForTermResponse$Outbound = {
  academicSession: components.AcademicSession$Outbound;
};

/** @internal */
export const CreateGradingPeriodForTermResponse$outboundSchema: z.ZodType<
  CreateGradingPeriodForTermResponse$Outbound,
  z.ZodTypeDef,
  CreateGradingPeriodForTermResponse
> = z.object({
  academicSession: components.AcademicSession$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodForTermResponse$ {
  /** @deprecated use `CreateGradingPeriodForTermResponse$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodForTermResponse$inboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermResponse$outboundSchema` instead. */
  export const outboundSchema =
    CreateGradingPeriodForTermResponse$outboundSchema;
  /** @deprecated use `CreateGradingPeriodForTermResponse$Outbound` instead. */
  export type Outbound = CreateGradingPeriodForTermResponse$Outbound;
}

export function createGradingPeriodForTermResponseToJSON(
  createGradingPeriodForTermResponse: CreateGradingPeriodForTermResponse,
): string {
  return JSON.stringify(
    CreateGradingPeriodForTermResponse$outboundSchema.parse(
      createGradingPeriodForTermResponse,
    ),
  );
}

export function createGradingPeriodForTermResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateGradingPeriodForTermResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateGradingPeriodForTermResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGradingPeriodForTermResponse' from JSON`,
  );
}
