/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const CreateGradingPeriodStatus = {
  Active: "active",
  Tobedeleted: "tobedeleted",
} as const;
export type CreateGradingPeriodStatus = ClosedEnum<
  typeof CreateGradingPeriodStatus
>;

export type CreateGradingPeriodParent = {
  sourcedId: string;
};

export type CreateGradingPeriodOrg = {
  sourcedId: string;
};

export type CreateGradingPeriodAcademicSession = {
  sourcedId?: string | undefined;
  status?: CreateGradingPeriodStatus | undefined;
  metadata?: { [k: string]: any } | undefined;
  title: string;
  startDate: string;
  endDate: string;
  type?: "gradingPeriod" | undefined;
  parent?: CreateGradingPeriodParent | null | undefined;
  schoolYear: string;
  org: CreateGradingPeriodOrg;
};

export type CreateGradingPeriodRequest = {
  academicSession: CreateGradingPeriodAcademicSession;
};

export type CreateGradingPeriodSourcedIdPairs = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/**
 * Grading period created successfully
 */
export type CreateGradingPeriodResponse = {
  sourcedIdPairs: CreateGradingPeriodSourcedIdPairs;
};

/** @internal */
export const CreateGradingPeriodStatus$inboundSchema: z.ZodNativeEnum<
  typeof CreateGradingPeriodStatus
> = z.nativeEnum(CreateGradingPeriodStatus);

/** @internal */
export const CreateGradingPeriodStatus$outboundSchema: z.ZodNativeEnum<
  typeof CreateGradingPeriodStatus
> = CreateGradingPeriodStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodStatus$ {
  /** @deprecated use `CreateGradingPeriodStatus$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodStatus$inboundSchema;
  /** @deprecated use `CreateGradingPeriodStatus$outboundSchema` instead. */
  export const outboundSchema = CreateGradingPeriodStatus$outboundSchema;
}

/** @internal */
export const CreateGradingPeriodParent$inboundSchema: z.ZodType<
  CreateGradingPeriodParent,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type CreateGradingPeriodParent$Outbound = {
  sourcedId: string;
};

/** @internal */
export const CreateGradingPeriodParent$outboundSchema: z.ZodType<
  CreateGradingPeriodParent$Outbound,
  z.ZodTypeDef,
  CreateGradingPeriodParent
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodParent$ {
  /** @deprecated use `CreateGradingPeriodParent$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodParent$inboundSchema;
  /** @deprecated use `CreateGradingPeriodParent$outboundSchema` instead. */
  export const outboundSchema = CreateGradingPeriodParent$outboundSchema;
  /** @deprecated use `CreateGradingPeriodParent$Outbound` instead. */
  export type Outbound = CreateGradingPeriodParent$Outbound;
}

export function createGradingPeriodParentToJSON(
  createGradingPeriodParent: CreateGradingPeriodParent,
): string {
  return JSON.stringify(
    CreateGradingPeriodParent$outboundSchema.parse(createGradingPeriodParent),
  );
}

export function createGradingPeriodParentFromJSON(
  jsonString: string,
): SafeParseResult<CreateGradingPeriodParent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateGradingPeriodParent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGradingPeriodParent' from JSON`,
  );
}

/** @internal */
export const CreateGradingPeriodOrg$inboundSchema: z.ZodType<
  CreateGradingPeriodOrg,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string(),
});

/** @internal */
export type CreateGradingPeriodOrg$Outbound = {
  sourcedId: string;
};

/** @internal */
export const CreateGradingPeriodOrg$outboundSchema: z.ZodType<
  CreateGradingPeriodOrg$Outbound,
  z.ZodTypeDef,
  CreateGradingPeriodOrg
> = z.object({
  sourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodOrg$ {
  /** @deprecated use `CreateGradingPeriodOrg$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodOrg$inboundSchema;
  /** @deprecated use `CreateGradingPeriodOrg$outboundSchema` instead. */
  export const outboundSchema = CreateGradingPeriodOrg$outboundSchema;
  /** @deprecated use `CreateGradingPeriodOrg$Outbound` instead. */
  export type Outbound = CreateGradingPeriodOrg$Outbound;
}

export function createGradingPeriodOrgToJSON(
  createGradingPeriodOrg: CreateGradingPeriodOrg,
): string {
  return JSON.stringify(
    CreateGradingPeriodOrg$outboundSchema.parse(createGradingPeriodOrg),
  );
}

export function createGradingPeriodOrgFromJSON(
  jsonString: string,
): SafeParseResult<CreateGradingPeriodOrg, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateGradingPeriodOrg$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGradingPeriodOrg' from JSON`,
  );
}

/** @internal */
export const CreateGradingPeriodAcademicSession$inboundSchema: z.ZodType<
  CreateGradingPeriodAcademicSession,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedId: z.string().optional(),
  status: CreateGradingPeriodStatus$inboundSchema.default("active"),
  metadata: z.record(z.any()).optional(),
  title: z.string(),
  startDate: z.string(),
  endDate: z.string(),
  type: z.literal("gradingPeriod").default("gradingPeriod").optional(),
  parent: z.nullable(z.lazy(() => CreateGradingPeriodParent$inboundSchema))
    .optional(),
  schoolYear: z.string(),
  org: z.lazy(() => CreateGradingPeriodOrg$inboundSchema),
});

/** @internal */
export type CreateGradingPeriodAcademicSession$Outbound = {
  sourcedId?: string | undefined;
  status: string;
  metadata?: { [k: string]: any } | undefined;
  title: string;
  startDate: string;
  endDate: string;
  type: "gradingPeriod";
  parent?: CreateGradingPeriodParent$Outbound | null | undefined;
  schoolYear: string;
  org: CreateGradingPeriodOrg$Outbound;
};

/** @internal */
export const CreateGradingPeriodAcademicSession$outboundSchema: z.ZodType<
  CreateGradingPeriodAcademicSession$Outbound,
  z.ZodTypeDef,
  CreateGradingPeriodAcademicSession
> = z.object({
  sourcedId: z.string().optional(),
  status: CreateGradingPeriodStatus$outboundSchema.default("active"),
  metadata: z.record(z.any()).optional(),
  title: z.string(),
  startDate: z.string(),
  endDate: z.string(),
  type: z.literal("gradingPeriod").default("gradingPeriod" as const),
  parent: z.nullable(z.lazy(() => CreateGradingPeriodParent$outboundSchema))
    .optional(),
  schoolYear: z.string(),
  org: z.lazy(() => CreateGradingPeriodOrg$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodAcademicSession$ {
  /** @deprecated use `CreateGradingPeriodAcademicSession$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodAcademicSession$inboundSchema;
  /** @deprecated use `CreateGradingPeriodAcademicSession$outboundSchema` instead. */
  export const outboundSchema =
    CreateGradingPeriodAcademicSession$outboundSchema;
  /** @deprecated use `CreateGradingPeriodAcademicSession$Outbound` instead. */
  export type Outbound = CreateGradingPeriodAcademicSession$Outbound;
}

export function createGradingPeriodAcademicSessionToJSON(
  createGradingPeriodAcademicSession: CreateGradingPeriodAcademicSession,
): string {
  return JSON.stringify(
    CreateGradingPeriodAcademicSession$outboundSchema.parse(
      createGradingPeriodAcademicSession,
    ),
  );
}

export function createGradingPeriodAcademicSessionFromJSON(
  jsonString: string,
): SafeParseResult<CreateGradingPeriodAcademicSession, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateGradingPeriodAcademicSession$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGradingPeriodAcademicSession' from JSON`,
  );
}

/** @internal */
export const CreateGradingPeriodRequest$inboundSchema: z.ZodType<
  CreateGradingPeriodRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  academicSession: z.lazy(() =>
    CreateGradingPeriodAcademicSession$inboundSchema
  ),
});

/** @internal */
export type CreateGradingPeriodRequest$Outbound = {
  academicSession: CreateGradingPeriodAcademicSession$Outbound;
};

/** @internal */
export const CreateGradingPeriodRequest$outboundSchema: z.ZodType<
  CreateGradingPeriodRequest$Outbound,
  z.ZodTypeDef,
  CreateGradingPeriodRequest
> = z.object({
  academicSession: z.lazy(() =>
    CreateGradingPeriodAcademicSession$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodRequest$ {
  /** @deprecated use `CreateGradingPeriodRequest$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodRequest$inboundSchema;
  /** @deprecated use `CreateGradingPeriodRequest$outboundSchema` instead. */
  export const outboundSchema = CreateGradingPeriodRequest$outboundSchema;
  /** @deprecated use `CreateGradingPeriodRequest$Outbound` instead. */
  export type Outbound = CreateGradingPeriodRequest$Outbound;
}

export function createGradingPeriodRequestToJSON(
  createGradingPeriodRequest: CreateGradingPeriodRequest,
): string {
  return JSON.stringify(
    CreateGradingPeriodRequest$outboundSchema.parse(createGradingPeriodRequest),
  );
}

export function createGradingPeriodRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateGradingPeriodRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateGradingPeriodRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGradingPeriodRequest' from JSON`,
  );
}

/** @internal */
export const CreateGradingPeriodSourcedIdPairs$inboundSchema: z.ZodType<
  CreateGradingPeriodSourcedIdPairs,
  z.ZodTypeDef,
  unknown
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/** @internal */
export type CreateGradingPeriodSourcedIdPairs$Outbound = {
  suppliedSourcedId: string;
  allocatedSourcedId: string;
};

/** @internal */
export const CreateGradingPeriodSourcedIdPairs$outboundSchema: z.ZodType<
  CreateGradingPeriodSourcedIdPairs$Outbound,
  z.ZodTypeDef,
  CreateGradingPeriodSourcedIdPairs
> = z.object({
  suppliedSourcedId: z.string(),
  allocatedSourcedId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodSourcedIdPairs$ {
  /** @deprecated use `CreateGradingPeriodSourcedIdPairs$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodSourcedIdPairs$inboundSchema;
  /** @deprecated use `CreateGradingPeriodSourcedIdPairs$outboundSchema` instead. */
  export const outboundSchema =
    CreateGradingPeriodSourcedIdPairs$outboundSchema;
  /** @deprecated use `CreateGradingPeriodSourcedIdPairs$Outbound` instead. */
  export type Outbound = CreateGradingPeriodSourcedIdPairs$Outbound;
}

export function createGradingPeriodSourcedIdPairsToJSON(
  createGradingPeriodSourcedIdPairs: CreateGradingPeriodSourcedIdPairs,
): string {
  return JSON.stringify(
    CreateGradingPeriodSourcedIdPairs$outboundSchema.parse(
      createGradingPeriodSourcedIdPairs,
    ),
  );
}

export function createGradingPeriodSourcedIdPairsFromJSON(
  jsonString: string,
): SafeParseResult<CreateGradingPeriodSourcedIdPairs, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateGradingPeriodSourcedIdPairs$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGradingPeriodSourcedIdPairs' from JSON`,
  );
}

/** @internal */
export const CreateGradingPeriodResponse$inboundSchema: z.ZodType<
  CreateGradingPeriodResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  sourcedIdPairs: z.lazy(() => CreateGradingPeriodSourcedIdPairs$inboundSchema),
});

/** @internal */
export type CreateGradingPeriodResponse$Outbound = {
  sourcedIdPairs: CreateGradingPeriodSourcedIdPairs$Outbound;
};

/** @internal */
export const CreateGradingPeriodResponse$outboundSchema: z.ZodType<
  CreateGradingPeriodResponse$Outbound,
  z.ZodTypeDef,
  CreateGradingPeriodResponse
> = z.object({
  sourcedIdPairs: z.lazy(() =>
    CreateGradingPeriodSourcedIdPairs$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateGradingPeriodResponse$ {
  /** @deprecated use `CreateGradingPeriodResponse$inboundSchema` instead. */
  export const inboundSchema = CreateGradingPeriodResponse$inboundSchema;
  /** @deprecated use `CreateGradingPeriodResponse$outboundSchema` instead. */
  export const outboundSchema = CreateGradingPeriodResponse$outboundSchema;
  /** @deprecated use `CreateGradingPeriodResponse$Outbound` instead. */
  export type Outbound = CreateGradingPeriodResponse$Outbound;
}

export function createGradingPeriodResponseToJSON(
  createGradingPeriodResponse: CreateGradingPeriodResponse,
): string {
  return JSON.stringify(
    CreateGradingPeriodResponse$outboundSchema.parse(
      createGradingPeriodResponse,
    ),
  );
}

export function createGradingPeriodResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateGradingPeriodResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateGradingPeriodResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateGradingPeriodResponse' from JSON`,
  );
}
